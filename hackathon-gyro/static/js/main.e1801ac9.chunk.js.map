{"version":3,"sources":["logo.svg","logo-correct.svg","logo-incorrect.svg","ReactAccelerometer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ReactAccelerometer","superclass","props","call","this","state","x","y","z","rotation","landscape","handleAcceleration","throttle","bind","handleOrientation","__proto__","prototype","Object","create","constructor","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","event","orientation","setState","ref$1","useGravity","multiplier","acceleration","accelerationIncludingGravity","rotationRate","render","children","react","Component","propTypes","PropTypes","func","isRequired","number","bool","defaultProps","index","PLAY","CALIBRATE","uncalibrated","count","alpha","beta","gamma","calibratedUp","calibratedLeft","calibratedRight","fixValue","val","Math","floor","randomInt","ceil","random","generateQuestion","num1","num2","answer1","answer2","answer3","shuffled","shuffle","answers","direction","answer","desired","find","calcEuclidDist","object","abs","Interpreter2","set","React","useEffect","upEuclidDist","leftEuclidDist","rightEuclidDist","min","guessDirection","PlayMode","useState","locked","setLocked","question","setQuestion","setDirectionState","setDirection","dir","console","log","interval","setInterval","clearInterval","srcLogo","logo","logoCorrect","logoIncorrect","src","className","alt","map","CalibrateSub","calibrateDirection","setTimeout","CalibrateMode","rawAlpha","rawBeta","rawGamma","totalCalibrated","App","mode","setMode","onClick","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,kQCmBvCC,EAAsB,SAAUC,GAClC,SAASD,EAAoBE,GAC3BD,EAAWE,KAAKC,KAAMF,GAEtBE,KAAKC,MAAQ,CACXC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,SAAU,KACVC,WAAW,GAGbN,KAAKO,mBAAqBC,mBAASR,KAAKO,mBAAmBE,KAAKT,MAAO,KACvEA,KAAKU,kBAAoBV,KAAKU,kBAAkBD,KAAKT,MA+DvD,OA5DKH,IAAaD,EAAmBe,UAAYd,GACjDD,EAAmBgB,UAAYC,OAAOC,OAAQjB,GAAcA,EAAWe,WACvEhB,EAAmBgB,UAAUG,YAAcnB,EAE3CA,EAAmBgB,UAAUI,kBAAoB,WAC/ChB,KAAKU,oBACLO,OAAOC,iBAAiB,eAAgBlB,KAAKO,oBAC7CU,OAAOC,iBAAiB,oBAAqBlB,KAAKU,oBAGpDd,EAAmBgB,UAAUO,qBAAuB,WAClDF,OAAOG,oBAAoB,eAAgBpB,KAAKO,oBAChDU,OAAOG,oBAAoB,oBAAqBpB,KAAKU,oBAGvDd,EAAmBgB,UAAUF,kBAAoB,SAA4BW,GAC3E,IAAIC,EAAcL,OAAOK,YACzBtB,KAAKuB,SAAS,CAAEjB,UAA2B,KAAhBgB,IAAuC,KAAjBA,KAGnD1B,EAAmBgB,UAAUL,mBAAqB,SAA6Bc,GAC7E,IACIf,EADMN,KAAKC,MACKK,UAChBkB,EAAQxB,KAAKF,MACb2B,EAAaD,EAAMC,WACnBC,EAAaF,EAAME,WACnBC,EAAeF,EAAaJ,EAAMO,6BAA+BP,EAAMM,aACvEtB,EAAWgB,EAAMQ,cAAgB,KACjC3B,EAAIyB,EAAazB,EACjBC,EAAIwB,EAAaxB,EACjBC,EAAIuB,EAAavB,EAErBJ,KAAKuB,SAAS,CACZlB,SAAUA,EACVH,GAAII,EAAYH,EAAID,GAAKwB,EACzBvB,GAAIG,EAAYJ,EAAIC,GAAKuB,EACzBtB,EAAGA,EAAIsB,KAIX9B,EAAmBgB,UAAUkB,OAAS,WACpC,IACIC,EADM/B,KAAKF,MACIiC,SACfP,EAAQxB,KAAKC,MACbC,EAAIsB,EAAMtB,EACVC,EAAIqB,EAAMrB,EACVC,EAAIoB,EAAMpB,EACVC,EAAWmB,EAAMnB,SAMrB,OAAIH,GAAKC,GAAKC,EACL2B,EAAS,CAAE7B,EAAGA,EAAGC,EAAGA,EAAGC,EAAGA,GAAKC,GAGjC0B,KAGFnC,EA5EiB,CAZdoC,IAyFJC,WAERrC,EAAmBsC,UAAY,CAC7BH,SAAUI,IAAUC,KAAKC,WACzBX,WAAYS,IAAUG,OACtBb,WAAYU,IAAUI,MAGxB3C,EAAmB4C,aAAe,CAChCd,WAAY,EACZD,YAAY,GAGd,IAIegB,EAJU7C,ECnGnB8C,EAAO,OACPC,EAAY,YASZC,EAAe,CACnBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,MAAO,GAGHC,EAAY,eACbL,GAECM,EAAc,eACfN,GAECO,EAAe,eAChBP,GAGCQ,EAAW,SAAAC,GAAG,OAAIC,KAAKC,MAAMF,IAAQ,GAIrCG,EAAY,kBAAMF,KAAKG,KAAqB,IAAhBH,KAAKI,WAEjCC,EAAmB,WAKvB,IAJA,IAAMC,EAAON,KAAKG,KAAqB,GAAhBH,KAAKI,UACtBG,EAAOP,KAAKG,KAAqB,GAAhBH,KAAKI,UACtBI,EAAUF,EAAOC,EACnBE,EAAUP,IACPO,IAAYD,GACjBC,EAAUP,IAIZ,IADA,IAAIQ,EAAUR,IACPQ,IAAYF,GACjBE,EAAUR,IAGZ,IAAMS,EAAWC,kBAAQ,CAACJ,EAASC,EAASC,IACtCG,EAAU,CACd,CAAEC,UA7CK,KA6CUC,OAAQJ,EAAS,IAClC,CAAEG,UA7CO,OA6CUC,OAAQJ,EAAS,IACpC,CAAEG,UA7CQ,QA6CUC,OAAQJ,EAAS,KAGvC,MAAO,CACLL,OACAC,OACAS,QAASH,EAAQI,MAAK,qBAAGF,SAAwBP,KAASM,UAC1DD,YAIEK,EAAiB,SAAC,GAAoC,IAAlC1B,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOyB,EAAa,EAAbA,OAI5C,OAHkBnB,KAAKoB,IAAI5B,EAAQ2B,EAAO3B,OACzBQ,KAAKoB,IAAI3B,EAAO0B,EAAO1B,MACtBO,KAAKoB,IAAI1B,EAAQyB,EAAOzB,QAiDtC2B,EAAe,SAAC,GAAiC,IAA/B7B,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAO4B,EAAU,EAAVA,IAe1C,OAZAC,IAAMC,WAAU,WACd,IAAMV,EAjDa,SAAC,GAA4B,IAAD,EAAzBtB,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAErC,GACEM,KAAKoB,IAAI5B,GArEgB,KAsEzBQ,KAAKoB,IAAI3B,GAtEgB,KAuEzBO,KAAKoB,IAAI1B,GAvEgB,IAyEzB,OAAO,KAIT,GACEC,EAAaJ,MAAQ,GACrBK,EAAeL,MAAQ,GACvBM,EAAgBN,MAAQ,EAExB,OAAO,KAGT,IAAMkC,EAAeP,EAAe,CAClC1B,QACAC,OACAC,QACAyB,OAAQxB,IAEJ+B,EAAiBR,EAAe,CACpC1B,QACAC,OACAC,QACAyB,OAAQvB,IAEJ+B,EAAkBT,EAAe,CACrC1B,QACAC,OACAC,QACAyB,OAAQtB,IAGV,OAAO,mBACJ4B,EAxGM,MAuGF,cAEJC,EAxGQ,QAsGJ,cAGJC,EAxGS,SAqGL,GAIL3B,KAAK4B,IAAIH,EAAcC,EAAgBC,IAOrBE,CAAe,CAC/BrC,QACAC,OACAC,UAGEoB,GACFQ,EAAIR,KAEL,CAACtB,EAAOC,EAAMC,EAAO4B,IAEjB,gCAGHQ,EAAW,WAAO,IAAD,EACOP,IAAMQ,UAAS,GADtB,mBACdC,EADc,KACNC,EADM,OAEWV,IAAMQ,SAAS1B,KAF1B,mBAEd6B,EAFc,KAEJC,EAFI,OAGkBZ,IAAMQ,WAHxB,mBAGdjB,EAHc,KAGHsB,EAHG,KAKfC,EAAe,SAAAC,GACdN,IACHO,QAAQC,IAAIF,GACZL,GAAU,GACVG,EAAkBE,KAItBf,IAAMC,WAAU,WACd,IAAMiB,EAAWC,aAAY,WAC3BN,EAAkB,MAClBH,GAAU,GACVE,EAAY9B,OACX,KACH,OAAO,kBAAMsC,cAAcF,MAC1B,IAEH,IAAIG,EAAUC,IAOd,OANI/B,GAAaA,IAAcoB,EAASlB,QACtC4B,EAAUE,IACDhC,GAAaA,IAAcoB,EAASlB,UAC7C4B,EAAUG,KAIV,6BACE,yBAAKC,IAAKJ,EAASK,UAAU,WAAWC,IAAI,SAC5C,4BACGhB,EAAS5B,KADZ,MACqB4B,EAAS3B,MAE7B2B,EAASrB,QAAQsC,KAAI,gBAAGpC,EAAH,EAAGA,OAAQD,EAAX,EAAWA,UAAX,OACpB,6BACGA,EADH,IACeC,MAGjB,+BAAQiB,GAAU,OAElB,4BACE,kBAAC,EAAD,CAAoB5D,WAAY,KAC7B,WAAoD,IAAD,yDAApC,GAAoC,KAAhDxB,EAAgD,EAA7CC,EAA6C,EAA1CC,EAA0C,uDAAP,IAAvB0C,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MACjC,OACE,kBAAC,EAAD,CACEF,MAAOM,EAASN,GAChBC,KAAMK,EAASL,GACfC,MAAOI,EAASJ,GAChB4B,IAAKe,UA+Bfe,EAAe,SAAC,GAA+C,IAA7C5D,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOoB,EAAwB,EAAxBA,UAAWK,EAAa,EAAbA,OAAa,EACtCI,IAAMQ,UAAS,GADuB,mBAC3DC,EAD2D,KACnDC,EADmD,KAsBlE,OAnBAV,IAAMC,WAAU,WACTQ,GAzBkB,SAAC,GAAoC,IAAlCxC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOyB,EAAa,EAAbA,OAUhD,OATInB,KAAKoB,IAAI5B,GA9Lc,MA+LzB2B,EAAO3B,OAAS2B,EAAO3B,MAAQA,IAAU2B,EAAO5B,MAAQ,IAEtDS,KAAKoB,IAAI3B,GAjMc,MAkMzB0B,EAAO1B,MAAQ0B,EAAO1B,KAAOA,IAAS0B,EAAO5B,MAAQ,IAEnDS,KAAKoB,IAAI1B,GApMc,MAqMzByB,EAAOzB,OAASyB,EAAOzB,MAAQA,IAAUyB,EAAO5B,MAAQ,IAGxDS,KAAKoB,IAAI5B,GAxMgB,KAyMzBQ,KAAKoB,IAAI3B,GAzMgB,KA0MzBO,KAAKoB,IAAI1B,GA1MgB,IAuNR2D,CAAmB,CAChC7D,QACAC,OACAC,QACAyB,aAIAc,GAAU,GACVqB,YAAW,WACTnC,EAAO5B,QACP0C,GAAU,KACT,QAGN,CAACzC,EAAOC,EAAMC,EAAOyB,EAAQa,IAG9B,6BACE,4CAAkBlB,GACjBkB,GAAU,6BAAM,sBACfA,GAAU,uCAAS,EAAIb,EAAO5B,MAApB,kBAKZgE,EAAgB,WAAO,IAAD,EACahC,IAAMQ,SAAS,MAD5B,mBACnBjB,EADmB,KACRsB,EADQ,OAEEb,IAAMQ,UAAS,GAFjB,mBAEnBC,EAFmB,KAEXC,EAFW,KAGpBI,EAAe,SAAAC,GACdN,IACHO,QAAQC,IAAIF,GACZL,GAAU,GACVG,EAAkBE,KAYtB,OARAf,IAAMC,WAAU,WACd,IAAMiB,EAAWC,aAAY,WAC3BN,EAAkB,MAClBH,GAAU,KACT,KACH,OAAO,kBAAMU,cAAcF,MAC1B,IAGD,6BACE,kBAAC,EAAD,CAAoBrE,WAAY,KAC7B,WAGK,IAAD,yDAFW,GAEX,KAFDxB,EAEC,EAFEC,EAEF,EAFKC,EAEL,uDADmD,IAA7C0G,EACN,EADDhE,MAAuBiE,EACtB,EADgBhE,KAAsBiE,EACtC,EAD+BhE,MAE5BF,EAAQM,EAAS0D,GACjB/D,EAAOK,EAAS2D,GAChB/D,EAAQI,EAAS4D,GACjBC,EACJhE,EAAaJ,MAAQK,EAAeL,MAAQM,EAAgBN,MAE9D,OACE,4BACGoE,EAAkB,GACjB,kBAAC,EAAD,CACEnE,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPyB,OAAQxB,EACRmB,UAAW,OAGd6C,GAAmB,GAAKA,EAAkB,GACzC,kBAAC,EAAD,CACEnE,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPyB,OAAQvB,EACRkB,UAAW,SAGd6C,GAAmB,GAAKA,EAAkB,GACzC,kBAAC,EAAD,CACEnE,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPyB,OAAQtB,EACRiB,UAAW,UAGM,IAApB6C,GACC,6BACE,iDACA,4CACA,8BAAO7C,GACP,kBAAC,EAAD,CACEtB,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACP4B,IAAKe,WA6BVuB,MAjBf,WAAgB,IAAD,EACWrC,IAAMQ,SAAS1C,GAD1B,mBACNwE,EADM,KACAC,EADA,KAGb,OACE,yBAAKb,UAAU,OACb,6BACE,4BAAQc,QAAS,kBAAMD,EAAQ1E,KAA/B,QACA,4BAAQ2E,QAAS,kBAAMD,EAAQzE,KAA/B,cAEF,4BAAQ4D,UAAU,cACfY,IAASzE,GAAQ,kBAAC,EAAD,MACjByE,IAASxE,GAAa,kBAAC,EAAD,SC/UX2E,QACW,cAA7BrG,OAAOsG,SAASC,UAEe,UAA7BvG,OAAOsG,SAASC,UAEhBvG,OAAOsG,SAASC,SAASC,MACvB,2DCZNC,IAAS5F,OAAO,kBAAC,EAAD,MAAS6F,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e1801ac9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-correct.5bda64db.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-incorrect.7fc3c369.svg\";","// stolen from https://www.npmjs.com/package/react-accelerometer\n// but updated for React v16\n\nimport react from 'react';\nimport PropTypes from 'prop-types';\nimport { throttle } from 'lodash';\n\nvar React = react;\n\n/**\n * @usage\n *    <ReactAccelerometer useGravity multiplier={3}>\n *      {(position, rotation) => (\n *        <div style={{ transform: `translate3d(${position.x}px, ${position.y}px, 0)`}}>\n *          Hello there\n *        </div>\n *      )}\n *    </ReactAccelerometer>\n */\nvar ReactAccelerometer = (function (superclass) {\n  function ReactAccelerometer (props) {\n    superclass.call(this, props);\n\n    this.state = {\n      x: null,\n      y: null,\n      z: null,\n      rotation: null,\n      landscape: false\n    };\n\n    this.handleAcceleration = throttle(this.handleAcceleration.bind(this), 100);\n    this.handleOrientation = this.handleOrientation.bind(this);\n  }\n\n  if ( superclass ) ReactAccelerometer.__proto__ = superclass;\n  ReactAccelerometer.prototype = Object.create( superclass && superclass.prototype );\n  ReactAccelerometer.prototype.constructor = ReactAccelerometer;\n\n  ReactAccelerometer.prototype.componentDidMount = function componentDidMount () {\n    this.handleOrientation();\n    window.addEventListener('devicemotion', this.handleAcceleration);\n    window.addEventListener('orientationchange', this.handleOrientation);\n  };\n\n  ReactAccelerometer.prototype.componentWillUnmount = function componentWillUnmount () {\n    window.removeEventListener('devicemotion', this.handleAcceleration);\n    window.removeEventListener('orientationchange', this.handleOrientation);\n  };\n\n  ReactAccelerometer.prototype.handleOrientation = function handleOrientation (event) {\n    var orientation = window.orientation;\n    this.setState({ landscape: orientation === 90 || orientation === -90 });\n  };\n\n  ReactAccelerometer.prototype.handleAcceleration = function handleAcceleration (event) {\n    var ref = this.state;\n    var landscape = ref.landscape;\n    var ref$1 = this.props;\n    var useGravity = ref$1.useGravity;\n    var multiplier = ref$1.multiplier;\n    var acceleration = useGravity ? event.accelerationIncludingGravity : event.acceleration;\n    var rotation = event.rotationRate || null;\n    var x = acceleration.x;\n    var y = acceleration.y;\n    var z = acceleration.z;\n\n    this.setState({\n      rotation: rotation,\n      x: (landscape ? y : x) * multiplier,\n      y: (landscape ? x : y) * multiplier,\n      z: z * multiplier\n    });\n  };\n\n  ReactAccelerometer.prototype.render = function render () {\n    var ref = this.props;\n    var children = ref.children;\n    var ref$1 = this.state;\n    var x = ref$1.x;\n    var y = ref$1.y;\n    var z = ref$1.z;\n    var rotation = ref$1.rotation;\n\n    /**\n     * We have to detect if one of the values was ever set by the 'devicemotion' event,\n     * as some browsers implement the API, but the device itself doesn't support.\n     */\n    if (x || y || z) {\n      return children({ x: x, y: y, z: z }, rotation)\n    }\n\n    return children()\n  };\n\n  return ReactAccelerometer;\n}(React.Component));\n\nReactAccelerometer.propTypes = {\n  children: PropTypes.func.isRequired,\n  multiplier: PropTypes.number,\n  useGravity: PropTypes.bool\n};\n\nReactAccelerometer.defaultProps = {\n  multiplier: 1,\n  useGravity: true\n};\n\nvar reactAccelerometer = ReactAccelerometer;\n\nvar index = reactAccelerometer;\n\nexport default index;\n//# sourceMappingURL=react-accelerometer.module.js.map\n","import React from \"react\";\nimport { shuffle } from \"lodash\";\nimport logo from \"./logo.svg\";\nimport logoCorrect from \"./logo-correct.svg\";\nimport logoIncorrect from \"./logo-incorrect.svg\";\nimport \"./App.css\";\n\nimport ReactAccelerometer from \"./ReactAccelerometer\";\n\n// Modes\nconst PLAY = \"play\";\nconst CALIBRATE = \"calibrate\";\n\nconst calibrateSensitivity = 125;\nconst UP = \"UP\";\nconst LEFT = \"LEFT\";\nconst RIGHT = \"RIGHT\";\n\nconst ALL_DIRECTIONS = [UP, LEFT, RIGHT];\n\nconst uncalibrated = {\n  count: 0,\n  alpha: 0,\n  beta: 0,\n  gamma: 0\n};\n\nconst calibratedUp = {\n  ...uncalibrated\n};\nconst calibratedLeft = {\n  ...uncalibrated\n};\nconst calibratedRight = {\n  ...uncalibrated\n};\n\nconst fixValue = val => Math.floor(val) || 0;\n\nconst randomDirection = () => ALL_DIRECTIONS[Math.floor(Math.random() * 3)];\n\nconst randomInt = () => Math.ceil(Math.random() * 144);\n\nconst generateQuestion = () => {\n  const num1 = Math.ceil(Math.random() * 12);\n  const num2 = Math.ceil(Math.random() * 12);\n  const answer1 = num1 * num2;\n  let answer2 = randomInt();\n  while (answer2 === answer1) {\n    answer2 = randomInt();\n  }\n\n  let answer3 = randomInt();\n  while (answer3 === answer1) {\n    answer3 = randomInt();\n  }\n\n  const shuffled = shuffle([answer1, answer2, answer3]);\n  const answers = [\n    { direction: UP, answer: shuffled[0] },\n    { direction: LEFT, answer: shuffled[1] },\n    { direction: RIGHT, answer: shuffled[2] }\n  ];\n\n  return {\n    num1,\n    num2,\n    desired: answers.find(({ answer }) => answer === answer1).direction,\n    answers\n  };\n};\n\nconst calcEuclidDist = ({ alpha, beta, gamma, object }) => {\n  const alphaDist = Math.abs(alpha - object.alpha);\n  const betaDist = Math.abs(beta - object.beta);\n  const gammaDist = Math.abs(gamma - object.gamma);\n  return alphaDist + betaDist + gammaDist;\n};\n\nconst guessDirection = ({ alpha, beta, gamma }) => {\n  // too light of a motion to tell\n  if (\n    Math.abs(alpha) < calibrateSensitivity &&\n    Math.abs(beta) < calibrateSensitivity &&\n    Math.abs(gamma) < calibrateSensitivity\n  ) {\n    return null;\n  }\n\n  // Uncalibrated\n  if (\n    calibratedUp.count < 3 ||\n    calibratedLeft.count < 3 ||\n    calibratedRight.count < 3\n  ) {\n    return null;\n  }\n\n  const upEuclidDist = calcEuclidDist({\n    alpha,\n    beta,\n    gamma,\n    object: calibratedUp\n  });\n  const leftEuclidDist = calcEuclidDist({\n    alpha,\n    beta,\n    gamma,\n    object: calibratedLeft\n  });\n  const rightEuclidDist = calcEuclidDist({\n    alpha,\n    beta,\n    gamma,\n    object: calibratedRight\n  });\n\n  return {\n    [upEuclidDist]: UP,\n    [leftEuclidDist]: LEFT,\n    [rightEuclidDist]: RIGHT\n  }[Math.min(upEuclidDist, leftEuclidDist, rightEuclidDist)];\n};\n\nconst Interpreter2 = ({ alpha, beta, gamma, set }) => {\n  // const [locked, setLocked] = React.useState(false);\n\n  React.useEffect(() => {\n    const direction = guessDirection({\n      alpha,\n      beta,\n      gamma\n    });\n\n    if (direction) {\n      set(direction);\n    }\n  }, [alpha, beta, gamma, set]);\n\n  return <span></span>;\n};\n\nconst PlayMode = () => {\n  const [locked, setLocked] = React.useState(false);\n  const [question, setQuestion] = React.useState(generateQuestion());\n  const [direction, setDirectionState] = React.useState();\n\n  const setDirection = dir => {\n    if (!locked) {\n      console.log(dir);\n      setLocked(true);\n      setDirectionState(dir);\n    }\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setDirectionState(null);\n      setLocked(false);\n      setQuestion(generateQuestion());\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  let srcLogo = logo;\n  if (direction && direction === question.desired) {\n    srcLogo = logoCorrect;\n  } else if (direction && direction !== question.desired) {\n    srcLogo = logoIncorrect;\n  }\n\n  return (\n    <div>\n      <img src={srcLogo} className=\"App-logo\" alt=\"logo\" />\n      <h1>\n        {question.num1} X {question.num2}\n      </h1>\n      {question.answers.map(({ answer, direction }) => (\n        <div>\n          {direction} {answer}\n        </div>\n      ))}\n      <span>{!locked && \"GO!\"}</span>\n\n      <h2>\n        <ReactAccelerometer multiplier={10}>\n          {({ x, y, z } = {}, { alpha, beta, gamma } = {}) => {\n            return (\n              <Interpreter2\n                alpha={fixValue(alpha)}\n                beta={fixValue(beta)}\n                gamma={fixValue(gamma)}\n                set={setDirection}\n              />\n            );\n          }}\n        </ReactAccelerometer>\n      </h2>\n    </div>\n  );\n};\n\nconst calibrateDirection = ({ alpha, beta, gamma, object }) => {\n  if (Math.abs(alpha) > calibrateSensitivity) {\n    object.alpha = (object.alpha + alpha) / (object.count + 1);\n  }\n  if (Math.abs(beta) > calibrateSensitivity) {\n    object.beta = (object.beta + beta) / (object.count + 1);\n  }\n  if (Math.abs(gamma) > calibrateSensitivity) {\n    object.gamma = (object.gamma + gamma) / (object.count + 1);\n  }\n  if (\n    Math.abs(alpha) > calibrateSensitivity ||\n    Math.abs(beta) > calibrateSensitivity ||\n    Math.abs(gamma) > calibrateSensitivity\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst CalibrateSub = ({ alpha, beta, gamma, direction, object }) => {\n  const [locked, setLocked] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!locked) {\n      const gotOne = calibrateDirection({\n        alpha,\n        beta,\n        gamma,\n        object\n      });\n\n      if (gotOne) {\n        setLocked(true);\n        setTimeout(() => {\n          object.count++;\n          setLocked(false);\n        }, 2000);\n      }\n    }\n  }, [alpha, beta, gamma, object, locked]);\n\n  return (\n    <div>\n      <div>Calibrating {direction}</div>\n      {locked && <div>{\"Got it! Saving...\"}</div>}\n      {!locked && <div>{`${3 - object.count} Remaining!`}</div>}\n    </div>\n  );\n};\n\nconst CalibrateMode = () => {\n  const [direction, setDirectionState] = React.useState(null);\n  const [locked, setLocked] = React.useState(false);\n  const setDirection = dir => {\n    if (!locked) {\n      console.log(dir);\n      setLocked(true);\n      setDirectionState(dir);\n    }\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setDirectionState(null);\n      setLocked(false);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <ReactAccelerometer multiplier={10}>\n        {(\n          { x, y, z } = {},\n          { alpha: rawAlpha, beta: rawBeta, gamma: rawGamma } = {}\n        ) => {\n          const alpha = fixValue(rawAlpha);\n          const beta = fixValue(rawBeta);\n          const gamma = fixValue(rawGamma);\n          const totalCalibrated =\n            calibratedUp.count + calibratedLeft.count + calibratedRight.count;\n\n          return (\n            <h2>\n              {totalCalibrated < 3 && (\n                <CalibrateSub\n                  alpha={alpha}\n                  beta={beta}\n                  gamma={gamma}\n                  object={calibratedUp}\n                  direction={\"UP\"}\n                />\n              )}\n              {totalCalibrated >= 3 && totalCalibrated < 6 && (\n                <CalibrateSub\n                  alpha={alpha}\n                  beta={beta}\n                  gamma={gamma}\n                  object={calibratedLeft}\n                  direction={\"LEFT\"}\n                />\n              )}\n              {totalCalibrated >= 6 && totalCalibrated < 9 && (\n                <CalibrateSub\n                  alpha={alpha}\n                  beta={beta}\n                  gamma={gamma}\n                  object={calibratedRight}\n                  direction={\"RIGHT\"}\n                />\n              )}\n              {totalCalibrated === 9 && (\n                <div>\n                  <div>Done Calibrating</div>\n                  <div>Try it out!</div>\n                  <span>{direction}</span>\n                  <Interpreter2\n                    alpha={alpha}\n                    beta={beta}\n                    gamma={gamma}\n                    set={setDirection}\n                  />\n                </div>\n              )}\n            </h2>\n          );\n        }}\n      </ReactAccelerometer>\n    </div>\n  );\n};\n\nfunction App() {\n  const [mode, setMode] = React.useState(CALIBRATE);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <button onClick={() => setMode(PLAY)}>Play</button>\n        <button onClick={() => setMode(CALIBRATE)}>Calibrate</button>\n      </div>\n      <header className=\"App-header\">\n        {mode === PLAY && <PlayMode />}\n        {mode === CALIBRATE && <CalibrateMode />}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}