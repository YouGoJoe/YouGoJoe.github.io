{"version":3,"sources":["logo.svg","logo-correct.svg","logo-incorrect.svg","ReactAccelerometer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ReactAccelerometer","superclass","props","call","this","state","x","y","z","rotation","landscape","handleAcceleration","throttle","bind","handleOrientation","__proto__","prototype","Object","create","constructor","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","event","orientation","setState","ref$1","useGravity","multiplier","acceleration","accelerationIncludingGravity","rotationRate","render","children","react","Component","propTypes","PropTypes","func","isRequired","number","bool","defaultProps","index","ALL_DIRECTIONS","isAndroid","userAgent","navigator","vendor","opera","test","randomDirection","Math","floor","random","Interpreter","set","direction","React","useState","zState","updateZ","xState","updateX","xDiff","abs","zDiff","SENSITIVITY_THRESHOLD","App","console","log","desiredDir","setDesiredDir","setDirectionState","locked","setLocked","setDirection","dir","useEffect","interval","setInterval","clearInterval","srcLogo","logo","logoCorrect","logoIncorrect","className","src","alt","actualX","actualZ","Boolean","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e443da00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-correct.5bda64db.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-incorrect.7fc3c369.svg\";","// stolen from https://www.npmjs.com/package/react-accelerometer\n// but updated for React v16\n\nimport react from 'react';\nimport PropTypes from 'prop-types';\nimport { throttle } from 'lodash';\n\nvar React = react;\n\n/**\n * @usage\n *    <ReactAccelerometer useGravity multiplier={3}>\n *      {(position, rotation) => (\n *        <div style={{ transform: `translate3d(${position.x}px, ${position.y}px, 0)`}}>\n *          Hello there\n *        </div>\n *      )}\n *    </ReactAccelerometer>\n */\nvar ReactAccelerometer = (function (superclass) {\n  function ReactAccelerometer (props) {\n    superclass.call(this, props);\n\n    this.state = {\n      x: null,\n      y: null,\n      z: null,\n      rotation: null,\n      landscape: false\n    };\n\n    this.handleAcceleration = throttle(this.handleAcceleration.bind(this), 150);\n    this.handleOrientation = this.handleOrientation.bind(this);\n  }\n\n  if ( superclass ) ReactAccelerometer.__proto__ = superclass;\n  ReactAccelerometer.prototype = Object.create( superclass && superclass.prototype );\n  ReactAccelerometer.prototype.constructor = ReactAccelerometer;\n\n  ReactAccelerometer.prototype.componentDidMount = function componentDidMount () {\n    this.handleOrientation();\n    window.addEventListener('devicemotion', this.handleAcceleration);\n    window.addEventListener('orientationchange', this.handleOrientation);\n  };\n\n  ReactAccelerometer.prototype.componentWillUnmount = function componentWillUnmount () {\n    window.removeEventListener('devicemotion', this.handleAcceleration);\n    window.removeEventListener('orientationchange', this.handleOrientation);\n  };\n\n  ReactAccelerometer.prototype.handleOrientation = function handleOrientation (event) {\n    var orientation = window.orientation;\n    this.setState({ landscape: orientation === 90 || orientation === -90 });\n  };\n\n  ReactAccelerometer.prototype.handleAcceleration = function handleAcceleration (event) {\n    var ref = this.state;\n    var landscape = ref.landscape;\n    var ref$1 = this.props;\n    var useGravity = ref$1.useGravity;\n    var multiplier = ref$1.multiplier;\n    var acceleration = useGravity ? event.accelerationIncludingGravity : event.acceleration;\n    var rotation = event.rotationRate || null;\n    var x = acceleration.x;\n    var y = acceleration.y;\n    var z = acceleration.z;\n\n    this.setState({\n      rotation: rotation,\n      x: (landscape ? y : x) * multiplier,\n      y: (landscape ? x : y) * multiplier,\n      z: z * multiplier\n    });\n  };\n\n  ReactAccelerometer.prototype.render = function render () {\n    var ref = this.props;\n    var children = ref.children;\n    var ref$1 = this.state;\n    var x = ref$1.x;\n    var y = ref$1.y;\n    var z = ref$1.z;\n    var rotation = ref$1.rotation;\n\n    /**\n     * We have to detect if one of the values was ever set by the 'devicemotion' event,\n     * as some browsers implement the API, but the device itself doesn't support.\n     */\n    if (x || y || z) {\n      return children({ x: x, y: y, z: z }, rotation)\n    }\n\n    return children()\n  };\n\n  return ReactAccelerometer;\n}(React.Component));\n\nReactAccelerometer.propTypes = {\n  children: PropTypes.func.isRequired,\n  multiplier: PropTypes.number,\n  useGravity: PropTypes.bool\n};\n\nReactAccelerometer.defaultProps = {\n  multiplier: 1,\n  useGravity: true\n};\n\nvar reactAccelerometer = ReactAccelerometer;\n\nvar index = reactAccelerometer;\n\nexport default index;\n//# sourceMappingURL=react-accelerometer.module.js.map\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport logoCorrect from \"./logo-correct.svg\";\nimport logoIncorrect from \"./logo-incorrect.svg\";\nimport \"./App.css\";\n\nimport ReactAccelerometer from \"./ReactAccelerometer\";\n\nconst SENSITIVITY_THRESHOLD = 40;\nconst UP = \"UP\";\nconst LEFT = \"LEFT\";\nconst RIGHT = \"RIGHT\";\n\nconst ALL_DIRECTIONS = [UP, LEFT, RIGHT];\n\nconst isAndroid = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  return /android/i.test(userAgent);\n};\n\nconst randomDirection = () => ALL_DIRECTIONS[Math.floor(Math.random() * 3)];\n\nconst Interpreter = ({ x, y, z, set, direction }) => {\n  // Previous positional values to track moves\n  const [zState, updateZ] = React.useState(z);\n  const [xState, updateX] = React.useState(x);\n\n  // Check Left/Right\n  const xDiff = Math.abs(x) - Math.abs(xState);\n  if (Math.abs(xDiff) > SENSITIVITY_THRESHOLD) {\n    updateX(x);\n\n    if (x < xState) {\n      set(RIGHT);\n    } else {\n      set(LEFT);\n    }\n  }\n\n  // Check Up\n  const zDiff = Math.abs(z) - Math.abs(zState);\n  if (Math.abs(zDiff) > SENSITIVITY_THRESHOLD * 2) {\n    updateZ(z);\n\n    if (zDiff > 0) {\n      set(UP);\n    }\n  }\n\n  return (\n    <div>\n      {/* {direction} */}\n      {/* <ul>\n        <li>x: {x}</li>\n        <li>z: {z}</li>\n      </ul> */}\n    </div>\n  );\n};\n\nfunction App() {\n  console.log(`Is Android? : ${isAndroid()}`)\n\n  const [desiredDir, setDesiredDir] = React.useState(randomDirection());\n  const [direction, setDirectionState] = React.useState();\n  const [locked, setLocked] = React.useState(false);\n\n  const setDirection = dir => {\n    if (!locked) {\n      console.log(dir);\n      setLocked(true);\n      setDirectionState(dir);\n    }\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setDirectionState(null);\n      setLocked(false);\n      setDesiredDir(randomDirection());\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  let srcLogo = logo;\n  if (direction && direction === desiredDir) {\n    srcLogo = logoCorrect;\n  } else if (direction && direction !== desiredDir) {\n    srcLogo = logoIncorrect;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={srcLogo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Desired direction is: {desiredDir}</h1>\n        {!locked && \"GO!\"}\n\n        <h2>\n          <ReactAccelerometer multiplier={10}>\n            {({ x, y, z } = {}) => {\n              // reverse axes for Android (Thanks for the tip Don!)\n              const actualX = isAndroid() ? z : x;\n              const actualZ = isAndroid() ? x : z;\n              return (\n              <Interpreter\n                x={Math.floor(actualX) || 0}\n                y={Math.floor(y) || 0}\n                z={Math.floor(actualZ) || 0}\n                set={setDirection}\n                direction={direction}\n              />\n            )}}\n          </ReactAccelerometer>\n        </h2>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}